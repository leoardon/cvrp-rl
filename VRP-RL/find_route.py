def parse_file(path):
    data = {}
    with open(path) as f:
        aggregate_section = ""
        values = []
        for l in f.readlines():
            if ":" in l:
                key, val = l.split(":", 1)
                data[key.strip().lower()] = val.strip()
            elif l.strip() == "NODE_COORD_SECTION":
                if values:
                    data[aggregate_section.lower()] = values
                aggregate_section = "NODE_COORD_SECTION"
                values = []
            elif l.strip() == "DEMAND_SECTION":
                if values:
                    data[aggregate_section.lower()] = values
                aggregate_section = "DEMAND_SECTION"
                values = []
            elif l.strip() == "DEPOT_SECTION":
                if values:
                    data[aggregate_section.lower()] = values
                aggregate_section = "DEPOT_SECTION"
                values = []
            elif l.strip() == "EOF":
                if values:
                    data[aggregate_section.lower()] = values
            elif aggregate_section == "NODE_COORD_SECTION":
                vs = []
                for i, v in enumerate(l.strip().split()):
                    if i == 0:
                        vs.append(int(v))
                    else:
                        vs.append(float(v))
                values.append(tuple(vs))
            elif aggregate_section in ("DEMAND_SECTION", "DEPOT_SECTION"):
                values.append(tuple(int(v) for v in l.strip().split()))

    data["node_coord_section"] = {v[0]: list(v[1:]) for v in data["node_coord_section"]}
    data["demand_section"] = {v[0]: v[1] for v in data["demand_section"]}
    data["capacity"] = int(data["capacity"])

    return data

file_data = parse_file("/home/ubuntu/dev/cvrplib/Christofides, Mingozzi and Toth (1979)/CMT1.vrp")
file_coords = file_data["node_coord_section"]
file_coords = {tuple(v): i-1 for i, v in file_coords.items()}

# coords = [[32.0, 22.0], [51.0, 21.0], [62.0, 42.0], [56.0, 37.0], [52.0, 33.0], [48.0, 28.0], [61.0, 33.0], [46.0, 10.0], [58.0, 27.0], [36.0, 16.0], [21.0, 10.0], [42.0, 57.0], [30.0, 40.0], [59.0, 15.0], [30.0, 15.0], [39.0, 10.0], [40.0, 30.0], [52.0, 41.0], [45.0, 35.0], [42.0, 41.0], [57.0, 58.0], [62.0, 63.0], [32.0, 39.0], [30.0, 40.0], [38.0, 46.0], [27.0, 23.0], [52.0, 64.0], [13.0, 13.0], [49.0, 49.0], [20.0, 26.0], [58.0, 48.0], [30.0, 40.0], [25.0, 32.0], [31.0, 32.0], [30.0, 40.0], [63.0, 69.0], [30.0, 40.0], [30.0, 48.0], [30.0, 40.0], [37.0, 52.0], [30.0, 40.0], [43.0, 67.0], [30.0, 40.0], [5.0, 6.0], [30.0, 40.0], [10.0, 17.0], [30.0, 40.0], [16.0, 57.0], [30.0, 40.0], [37.0, 69.0], [30.0, 40.0], [25.0, 55.0], [30.0, 40.0], [31.0, 62.0], [30.0, 40.0], [21.0, 47.0], [30.0, 40.0], [12.0, 42.0], [30.0, 40.0], [17.0, 33.0], [30.0, 40.0], [17.0, 63.0], [30.0, 40.0], [5.0, 64.0], [30.0, 40.0], [27.0, 68.0], [30.0, 40.0], [8.0, 52.0], [30.0, 40.0], [5.0, 25.0], [30.0, 40.0], [7.0, 38.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0]]

coords = [[62.0, 42.0], [32.0, 22.0], [51.0, 21.0], [52.0, 33.0], [56.0, 37.0], [48.0, 28.0], [46.0, 10.0], [61.0, 33.0], [58.0, 27.0], [36.0, 16.0], [21.0, 10.0], [32.0, 39.0], [27.0, 23.0], [30.0, 40.0], [59.0, 15.0], [30.0, 15.0], [40.0, 30.0], [39.0, 10.0], [52.0, 41.0], [45.0, 35.0], [42.0, 41.0], [57.0, 58.0], [52.0, 64.0], [58.0, 48.0], [30.0, 40.0], [62.0, 63.0], [38.0, 46.0], [13.0, 13.0], [49.0, 49.0], [42.0, 57.0], [20.0, 26.0], [25.0, 32.0], [30.0, 40.0], [31.0, 32.0], [30.0, 40.0], [63.0, 69.0], [30.0, 40.0], [30.0, 48.0], [30.0, 40.0], [43.0, 67.0], [30.0, 40.0], [37.0, 52.0], [30.0, 40.0], [5.0, 6.0], [30.0, 40.0], [10.0, 17.0], [30.0, 40.0], [16.0, 57.0], [30.0, 40.0], [25.0, 55.0], [30.0, 40.0], [37.0, 69.0], [30.0, 40.0], [31.0, 62.0], [30.0, 40.0], [21.0, 47.0], [30.0, 40.0], [12.0, 42.0], [30.0, 40.0], [17.0, 33.0], [30.0, 40.0], [17.0, 63.0], [30.0, 40.0], [5.0, 64.0], [30.0, 40.0], [27.0, 68.0], [30.0, 40.0], [8.0, 52.0], [30.0, 40.0], [5.0, 25.0], [30.0, 40.0], [7.0, 38.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0], [30.0, 40.0]]
coords = [tuple(v) for v in coords]
print([file_coords[v] for v in coords])


